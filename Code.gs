/**
 * -------------------------------------------------------
 * Telegram Bot API
 * -------------------------------------------------------
 * by Warapetch  Ruangpornvisuthi
 * ‡∏ß‡∏£‡πÄ‡∏û‡∏ä‡∏£  ‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡∏û‡∏£‡∏ß‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå
 * Created :: 6711-21
 * Last Update :: 6711-27 10.00 ‡∏ô
 * -------------------------------------------------------
 */

let txtAbout = 'Telegram Bot API </br>by Warapetch  Ruangpornvisuthi </br>Last Update :: 6711-22';
let tgBotAPIUrl  = 'https://api.telegram.org';
let tgBotToken   = '';
let tgBotChatIDs = [];



/**
 * About
 * 
 * Telegram Bot API
 * 
 * by Warapetch  Ruangpornvisuthi
 * 
 * ‡∏ß‡∏£‡πÄ‡∏û‡∏ä‡∏£  ‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡∏û‡∏£‡∏ß‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå
 * 
 * Last Update :: 6711-22 13.30‡∏ô.
 */
function about(){

  return txtAbout;

}


/**
 
 * ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô warapetch Telegram Bot
 *
 * ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏£‡∏π‡πâ
 * 
 * botUrl ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞ API (‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Library ‡∏à‡∏∞‡πÑ‡∏õ‡πÅ‡∏ó‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏≠‡∏á)
 * 
 * chat_id ‡∏Ñ‡∏∑‡∏≠ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó ‡∏´‡∏£‡∏∑‡∏≠ User ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà BotID ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà UserID  !!
 * 
 * @param {String} botToken - ‡∏ö‡∏≠‡∏ó‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô
 * 
 * @param {Array<String>} botChatIDs - ‡πÅ‡∏ä‡∏ó‡πÑ‡∏≠‡∏î‡∏µ ‡πÄ‡∏õ‡πá‡∏ô Array ["id#1","id#2"] 
 * 
 * @param {String} botAPIUrl - Default 'https://api.telegram.org'
 * 
 * @example 
 * 
 * telegramAPIUrl   = 'https://api.telegram.org'
 * 
 * botToken = 'NNN:SSSSS'
 * 
 * botChatIDs = ["chat_id1","chat_id2"]
 * 
 */
function setBotConfig(botToken,botChatIDs,botAPIUrl='https://api.telegram.org'){

    tgBotAPIUrl  = botAPIUrl;
    tgBotToken   = botToken;
    tgBotChatIDs = botChatIDs;

}


/**
 * ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ Telegram API Url (‡∏ó‡∏µ‡πà‡∏ï‡∏±‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß)
 * 
 * format >> https://api.telegram.org/bot<token>/
 * 
 * @returns {String} BotAPIUrl + 'bot'+BotToken + '/';
*/

function getAPIUrl(){

  let _url = tgBotAPIUrl + '/bot'+tgBotToken + '/';
  return _url;

}


/**
 * SendToAPI 
 * ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ Payload ‡πÄ‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 * @param {JSON} payload
 * @param {String} httpMethod @default "post"
 * @example
 * 
 * let payload = { 
 * 
 *         method: "sendMessage", 
 * 
 *         chat_id: String(chat_id), 
 * 
 *         text: text, 
 * 
 *         parse_mode: "HTML" 
 * 
 *       } 
 * 
 * SendToAPI(payload);
 * 
 */
function SendToAPI(payload,httpMethod = "post") {
  
  let options = {
        method: httpMethod,
        payload: payload
  };

  try {

    let url = getAPIUrl();
    let respData =  UrlFetchApp.fetch(url, options);

    console.log('API Response: ',respData.getContentText());

    return respData;

  } catch (e) {
    console.error('API Response Error: ', e);
  }

}


/**
 * getMe 
 * 
 * ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó ‡πÑ‡∏≠‡∏î‡∏µ, ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó , ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô
 *
*/
function getMe(){

  let payload = {
    method: "getMe"
  }
  let respData = SendToAPI(payload,"get");
  return respData.getContentText();

}


/**
 * getUpdates 
 * 
 * ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó
 *
*/
function getUpdates(){

  let payload = {
    method: "getUpdates"
  }
  let respData = SendToAPI(payload,"get");
  return respData.getContentText();

}


/**
 * setWebhook 
 * 
 * ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ Url ‡∏Ç‡∏≠‡∏á WebHook ‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó
 * 
 * @param {String} webHookUrl
 * 
 * Telegram API ‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Updates 
 * 
 * ‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó
 *
*/
function setWebhook(webHookUrl){

  let payload = {
    method: "setWebhook",
    url: webHookUrl
  }

  let respData = SendToAPI(payload);
  return respData.getContentText();

}

/**
 * getWebhookInfo 
 * 
 * ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ WebHook ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
 *
*/

function getWebhookInfo(){

  let payload = {
    method: "getWebhookInfo",
  }
  let respData = SendToAPI(payload,"get");
  return respData.getContentText();

}


/**
 * deleteWebhook 
 * 
 * ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤ Url WebHook ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
 * 
 * Telegram API ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Updates ‡∏°‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß
*/
function deleteWebhook(){

  let payload = {
    method: "deleteWebhook",
  }
  let respData = SendToAPI(payload);
  return respData.getContentText();

}


/**
 * sendMessage ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
 *
 * @param {String} text ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
 * 
 */

function sendMessage(text) {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendMessage",
            chat_id: String(_chatId),
            text: text,
            parse_mode: "HTML"
          }

    return SendToAPI(payload);

  }

}


/**
 * sendSticker ‡∏™‡πà‡∏á‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå Id , InputFile()
 *
 * @param {String} stickId ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏™‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
 */

function sendSticker(stickId) {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendSticker",
            chat_id: String(_chatId),
            sticker: stickId,
          }

    return SendToAPI(payload);

  }

}


/**
 * sendDice 
 * 
 * ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏¢‡∏•‡∏π‡∏Å‡πÄ‡∏ï‡πã‡∏≤ (‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏ï‡πâ‡∏° 6 ‡∏Ñ‡πà‡∏≤)
 */
function sendDice() {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDice",
            chat_id: String(_chatId),
            emoji: 'üé≤',
          }

    return SendToAPI(payload);

  }

}


/**
 * sendSlotMachine 
 * 
 * ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏™‡∏•‡πá‡∏≠‡∏ï‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô (‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 64 ‡∏Ñ‡πà‡∏≤)
 */

function sendSlotMachine() {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDice",
            chat_id: String(_chatId),
            emoji: 'üé∞',
          }

    return SendToAPI(payload);

  }

}


/**
 * sendDart 
 * 
 * ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏õ‡∏≤‡∏•‡∏π‡∏Å‡∏î‡∏≠‡∏Å(Dart) (‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 6 ‡∏Ñ‡πà‡∏≤)
 */
function sendDart() {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDice",
            chat_id: String(_chatId),
            emoji: 'üéØ',
          }

    return SendToAPI(payload);

  }

}


/**
 * sendBall 
 * 
 * ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏ï‡∏∞‡∏ö‡∏≠‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏ï‡∏π (‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 5 ‡∏Ñ‡πà‡∏≤)
 */

function sendBall() {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDice",
            chat_id: String(_chatId),
            emoji: '‚öΩ',
          }

    return SendToAPI(payload);

  }

}


/**
 * sendBaseketBall 
 * 
 * ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡∏ä‡∏π‡∏ó‡∏•‡∏π‡∏Å‡∏ö‡∏≤‡∏™ (‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 5 ‡∏Ñ‡πà‡∏≤)
 */
function sendBaseketBall() {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDice",
            chat_id: String(_chatId),
            emoji: 'üèÄ',
          }

    return SendToAPI(payload);

  }

}


/**
 * sendBowling 
 * 
 * ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÇ‡∏¢‡∏ô‡πÇ‡∏ö‡∏ß‡πå‡∏•‡∏¥‡πà‡∏á (‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ 6 ‡∏Ñ‡πà‡∏≤)
 */

function sendBowling() {

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDice",
            chat_id: String(_chatId),
            emoji: 'üé≥',
          }

    return SendToAPI(payload);

  }

}


/**
 * sendPhoto ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û Url
 *
 * @param {String} photoUrl
 * 
 * @param {String} photoCaption (Option)
 * 
 * ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û ‡∏´‡∏£‡∏∑‡∏≠ ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Google Drive ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πà‡∏≠‡∏ô
 * 
 * @example
 * 
 * ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 
 * 
 * file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
 */

function sendPhoto(photoUrl,photoCaption = null) {

  // Google Drive ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πà‡∏≠‡∏ô
  // newFile.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);

  
  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendPhoto",
            chat_id: String(_chatId),
            photo: photoUrl,
            caption: photoCaption,
            parse_mode: "HTML"
          }

    return SendToAPI(payload);

  }
}


/**
 * sendPhotoFromGGDrive 
 * 
 * ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û Url ‡∏à‡∏≤‡∏Å Google Drive ‡πÄ‡∏õ‡πá‡∏ô Url ‡∏´‡∏£‡∏∑‡∏≠ Blob
 *
 * @param {Blob} fileBlob
 * 
 * @param {String} fileUrl (Option) ‡∏™‡πà‡∏á URL / Blob ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á
 * 
 * @param {String} photoCaption (Option)
 * 
 * ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û ‡∏´‡∏£‡∏∑‡∏≠ ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Google Drive ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πà‡∏≠‡∏ô
 * 
 * @example
 * 
 * ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 
 * 
 * file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
 */
function sendPhotoFromGGDrive(fileBlob , fileUrl = "" , photoCaption = null) {

  // Google Drive
  // 3 Type of Url
  // https://drive.usercontent.google.com/download?id={file_imge_id}
  // https://drive.google.com/file/d/{file_imge_id}/view
  // https://docs.google.com/uc?id={file_imge_id}

  // Create Blob
  // let imgBlob = DriveApp.getFileById(fileId).getBlob();
  
  // Google Drive ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πà‡∏≠‡∏ô
  // newFile.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  
  // let media = {"InputMedia":`Photo(InputMediaPhoto.new(InputFile.url(${fileUrl})`};

  for (var _chatId of tgBotChatIDs){

    if (fileBlob != null){
      let payload = {
            method: "sendPhoto",
            chat_id: String(_chatId),
            photo: fileBlob,
            caption: photoCaption,
            parse_mode: "HTML"
          }

    } else {
      let payload = {
            method: "sendPhoto",
            chat_id: String(_chatId),
            photo: fileUrl,
            caption: photoCaption,
            parse_mode: "HTML"
          }
    }

    return SendToAPI(payload);

  }
  
}


/**
 * sendDocument ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå (‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡∏ô‡∏¥‡∏î) ‡∏à‡∏≤‡∏Å Google Drive ‡πÄ‡∏õ‡πá‡∏ô Blob
 *
 * @param {Blob} fileBlob
 * 
 * @param {String} fileCaption (Option)
 * 
 * ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û ‡∏´‡∏£‡∏∑‡∏≠ ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Google Drive ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πà‡∏≠‡∏ô
 * 
 * @example
 * 
 * ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 
 * 
 * file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
 */

function sendDocument(fileBlob,fileCaption = null) {

  // file Blob ‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å
  // var blob = DriveApp.getFileById(fileId).getBlob();
  
  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendDocument",
            chat_id: String(_chatId),
            document: fileBlob,
            caption: fileCaption,
            parse_mode: "HTML"
          }

    return SendToAPI(payload);

    }

}


/**
 * sendVideo ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
 *
 * ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Google Drive ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πà‡∏≠‡∏ô
 * 
 * @param {String} fileUrl
 * 
 * @param {String} fileCaption (Option)
 * 
 * @example
 * 
 * ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á 
 * 
 * file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
  */
function sendVideo(fileUrl,fileCaption = null) {

 
  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendVideo",
            chat_id: String(_chatId),
            video: fileUrl,
            caption: fileCaption
          }

    return SendToAPI(payload);

    }

}


/**
 * sendLocation 
 * 
 * ‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Latitude,Longitude
 * 
 * @param latitude {Float} ‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
 * 
 * @param longitude {Float} ‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
 *
 * @param headingDirection {Number} ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏´‡∏±‡∏ß‡∏•‡∏π‡∏Å‡∏®‡∏£ ‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà 1-360 ‡∏≠‡∏á‡∏®‡∏≤
 * 
 */
function sendLocation(latitude,longitude , headingDirection = 1){

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendLocation",
            chat_id: String(_chatId),
            latitude: latitude,
            longitude: longitude,
            heading: headingDirection
          }

    return SendToAPI(payload);

    }

}


/**
 * sendVenue 
 * 
 * ‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á+‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà Latitude,Longitude ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
 *
  * @param {Float} latitude ‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
 * 
 * @param {Float} longitude ‡πÄ‡∏•‡∏Ç‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
 *
 * @param {String} title ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà
 * 
 * @param {String} address ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
 */

function sendVenue(latitude,longitude ,title,address){

  for (var _chatId of tgBotChatIDs){

    let payload = {
            method: "sendVenue",
            chat_id: String(_chatId),
            latitude: latitude,
            longitude: longitude,
            title: title ,
            address: address
          }

    return SendToAPI(payload);

    }

}
